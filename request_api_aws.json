{
    "openapi": "3.0.0",
    "info": {
      "title": "Request Management API",
      "version": "1.0.0",
      "description": "API for managing various employee requests"
    },
    "paths": {
      "/api/request/new": {
        "post": {
          "summary": "Submit a new request",
          "description": "Allows an employee (service requestor) to submit a new request",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_description_":"Basic properties of this request, public to all roles in this request",
                    "employee_id": {
                      "type": "string",
                      "description": "Employee ID"
                    },
                    "request_type": {
                      "type": "string",
                      "description": "Type of request"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "Start time of the request in ISO 8601 format",
                      "format": "date-time"
                    }
                  },
                  "requestor_content":{
                    "_description_":"The information provided by requestor",
                    "name":"string",
                    "card_id":"string",
                    "reason_for_card_replacement":"string"
                  },
                  "required": [
                    "_suggestion_: all arguments in <properties> and <content> are required, but some arguments in <content> can carry None, i.e. <reason_for_card_replacement>"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Request received",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "_comment_":"sorry I don't understant what this message comes from and is used for.",
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:488570541368:function:cmkl-rei/invocations",
            "credentials": "arn:aws:iam::488570541368:role/lambda_invoke_function_assume_apigw_role"
          }
        }
      },
      "/api/request/pending": {
        "get": {
          "summary": "Get pending requests",
          "description": "Retrieves all pending requests for the service provider (HR staff) to review",
          "responses": {
            "200": {
              "description": "List of pending requests with employee details, request type, and payload",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "Request ID"
                        },
                        "employee_id": {
                          "type": "string",
                          "description": "Employee ID"
                        },
                        "request_type": {
                          "type": "string",
                          "description": "Type of request"
                        }
                      },
                      "contents":{
                        "type":"array",
                        "description":"who's content is avilable. i.e. Provider1 (P1) can see requestor submitted content. P2 can see P1 and requestor's content. P3 can only see P2's content ",
                        "item":{
                          "type":"object",
                          "identity":"requestor_content",
                          "content":{
                            "description":"all arguments from <identity>, in this case, will be <name>,<card_id>and<reason...>"
                          }

                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:488570541368:function:cmkl-rei/invocations",
            "credentials": "arn:aws:iam::488570541368:role/lambda_invoke_function_assume_apigw_role"
          }
        }
      },
      "/api/request/approve": {
        "post": {
          "summary": "Approve a request",
          "description": "Allows the service provider (HR staff) to approve a pending request",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Request ID"
                    }
                  },
                  "{provider}_control": {
                    "start_time":"date-time",
                    "provider_id":"who specifically accepts and is going to process this request"
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Request approved",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:488570541368:function:cmkl-rei/invocations",
            "credentials": "arn:aws:iam::488570541368:role/lambda_invoke_function_assume_apigw_role"
          }
        }
      },
      "/api/request/reject": {
        "post": {
          "summary": "Reject a request",
          "description": "Allows the service provider (HR staff) to reject a pending request",
          "_comment_":"in my design, the reject will happen in a processing request (i.e. a provider finds out a lapse of important infomation during processing). I don't know what's your thought, let's talk later.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Request ID"
                    },
                    "reason": {
                      "type": "string",
                      "description": "Optional reason for rejection"
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Request rejected",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:488570541368:function:cmkl-rei/invocations",
            "credentials": "arn:aws:iam::488570541368:role/lambda_invoke_function_assume_apigw_role"
          }
        }
      },
      "/api/request/status/{request_id}": {
        "get": {
          "summary": "Get request status",
          "description": "Retrieves the status of a specific request",
          "parameters": [
            {
              "name": "request_id",
              "in": "path",
              "description": "Request ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Request status, request type, and details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Request status"
                      },
                      "request_type": {
                        "type": "string",
                        "description": "Type of request"
                      },
                      "details": {
                        "type": "object",
                        "description": "Request details",
                        "_comment_":"what do you mean details here? If you mean the content, I would recommend to move this out of <properties>"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Request not found"
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:488570541368:function:cmkl-rei/invocations",
            "credentials": "arn:aws:iam::488570541368:role/lambda_invoke_function_assume_apigw_role"
          }
        }
      },
      "/api/request/complete": {
        "post": {
          "summary": "Complete a request",
          "description": "Marks a request as completed",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Request ID"
                    }
                    
                  },
                  "{provider}_control":{
                    "end_time": {
                      "type": "string",
                      "description": "End time of the request in ISO 8601 format",
                      "format": "date-time"
                    }
                  },
                  "{provider}_content":{
                    "_description_":"The information provided by provider. Augments varies for different provider.",
                    "card_fee":"float",
                    "approve":"bool",
                    "reason":"string"
                  },
                  "required": [
                    "request_id",
                    "end_time"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Request completed",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "x-amazon-apigateway-integration": {
            "type": "aws_proxy",
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:488570541368:function:cmkl-rei/invocations",
            "credentials": "arn:aws:iam::488570541368:role/lambda_invoke_function_assume_apigw_role"
          }
        }
      }
    }
  }
  
  